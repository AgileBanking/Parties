import entities.Address
import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_parties_address_form_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/address/_form.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
expressionOut.print(hasErrors(bean: addressInstance, field: 'person', 'error'))
printHtmlPart(1)
invokeTag('message','g',7,['code':("address.person.label"),'default':("Person")],-1)
printHtmlPart(2)
invokeTag('select','g',10,['id':("person"),'name':("person.id"),'from':(entities.Person.list()),'optionKey':("id"),'required':(""),'value':(addressInstance?.person?.id),'class':("many-to-one")],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'addressType', 'error'))
printHtmlPart(4)
invokeTag('message','g',15,['code':("address.addressType.label"),'default':("Address Type")],-1)
printHtmlPart(2)
invokeTag('select','g',18,['id':("addressType"),'name':("addressType.id"),'from':(entities.AddressType.list()),'optionKey':("id"),'required':(""),'value':(addressInstance?.addressType?.id),'class':("many-to-one")],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'street', 'error'))
printHtmlPart(5)
invokeTag('message','g',23,['code':("address.street.label"),'default':("Street")],-1)
printHtmlPart(2)
invokeTag('textField','g',26,['name':("street"),'required':(""),'value':(addressInstance?.street)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'streetNumber', 'error'))
printHtmlPart(6)
invokeTag('message','g',31,['code':("address.streetNumber.label"),'default':("Street Number")],-1)
printHtmlPart(2)
invokeTag('textField','g',34,['name':("streetNumber"),'required':(""),'value':(addressInstance?.streetNumber)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'crossingStreet', 'error'))
printHtmlPart(7)
invokeTag('message','g',39,['code':("address.crossingStreet.label"),'default':("Crossing Street")],-1)
printHtmlPart(8)
invokeTag('textField','g',42,['name':("crossingStreet"),'maxlength':("40"),'value':(addressInstance?.crossingStreet)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'crossingStreetNumber', 'error'))
printHtmlPart(9)
invokeTag('message','g',47,['code':("address.crossingStreetNumber.label"),'default':("Crossing Street Number")],-1)
printHtmlPart(8)
invokeTag('textField','g',50,['name':("crossingStreetNumber"),'maxlength':("5"),'value':(addressInstance?.crossingStreetNumber)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'floor', 'error'))
printHtmlPart(10)
invokeTag('message','g',55,['code':("address.floor.label"),'default':("Floor")],-1)
printHtmlPart(8)
invokeTag('textField','g',58,['name':("floor"),'maxlength':("20"),'value':(addressInstance?.floor)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'appartment', 'error'))
printHtmlPart(11)
invokeTag('message','g',63,['code':("address.appartment.label"),'default':("Appartment")],-1)
printHtmlPart(8)
invokeTag('textField','g',66,['name':("appartment"),'maxlength':("5"),'value':(addressInstance?.appartment)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'city', 'error'))
printHtmlPart(12)
invokeTag('message','g',71,['code':("address.city.label"),'default':("City")],-1)
printHtmlPart(2)
invokeTag('textField','g',74,['name':("city"),'required':(""),'value':(addressInstance?.city)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'postCode', 'error'))
printHtmlPart(13)
invokeTag('message','g',79,['code':("address.postCode.label"),'default':("Post Code")],-1)
printHtmlPart(2)
invokeTag('textField','g',82,['name':("postCode"),'required':(""),'value':(addressInstance?.postCode)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'stateOrProvince', 'error'))
printHtmlPart(14)
invokeTag('message','g',87,['code':("address.stateOrProvince.label"),'default':("State Or Province")],-1)
printHtmlPart(2)
invokeTag('textField','g',90,['name':("stateOrProvince"),'required':(""),'value':(addressInstance?.stateOrProvince)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'countryCode2', 'error'))
printHtmlPart(15)
invokeTag('message','g',95,['code':("address.countryCode2.label"),'default':("Country Code2")],-1)
printHtmlPart(2)
invokeTag('textField','g',98,['name':("countryCode2"),'required':(""),'value':(addressInstance?.countryCode2)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'geoLat', 'error'))
printHtmlPart(16)
invokeTag('message','g',103,['code':("address.geoLat.label"),'default':("Geo Lat")],-1)
printHtmlPart(8)
invokeTag('field','g',106,['name':("geoLat"),'value':(fieldValue(bean: addressInstance, field: 'geoLat'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'geoLng', 'error'))
printHtmlPart(17)
invokeTag('message','g',111,['code':("address.geoLng.label"),'default':("Geo Lng")],-1)
printHtmlPart(8)
invokeTag('field','g',114,['name':("geoLng"),'value':(fieldValue(bean: addressInstance, field: 'geoLng'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'language', 'error'))
printHtmlPart(18)
invokeTag('message','g',119,['code':("address.language.label"),'default':("Language")],-1)
printHtmlPart(8)
invokeTag('textField','g',122,['name':("language"),'value':(addressInstance?.language)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: addressInstance, field: 'notes', 'error'))
printHtmlPart(19)
invokeTag('message','g',127,['code':("address.notes.label"),'default':("Notes")],-1)
printHtmlPart(8)
invokeTag('textField','g',130,['name':("notes"),'value':(addressInstance?.notes)],-1)
printHtmlPart(20)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1422691747899L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
